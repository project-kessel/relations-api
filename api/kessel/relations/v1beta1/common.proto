syntax = "proto3";

package kessel.relations.v1beta1;

import "buf/validate/validate.proto";

option go_package = "github.com/project-kessel/relations-api/api/kessel/relations/v1beta1";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.relations.v1beta1";

// A _Relationship_ is the realization of a _Relation_ (a string) 
// between a _Resource_ and a _Subject_ or a _Subject Set_ (known as a Userset in Zanzibar).
//
// All Relationships are object-object relations.
// "Resource" and "Subject" are relative terms which define the direction of a Relation.
// That is, Relations are unidirectional.
// If you reverse the Subject and Resource, it is a different Relation and a different Relationship.
// Conventionally, we generally refer to the Resource first, then Subject,
// following the direction of typical graph traversal (Resource to Subject).
message Relationship {
	ObjectReference resource = 1 [(buf.validate.field).required = true]; 
	string relation = 2 [(buf.validate.field).string.min_len = 1];
	SubjectReference subject = 3 [(buf.validate.field).required = true];
}

// A reference to a Subject or, if a `relation` is provided, a Subject Set.
message SubjectReference {
	// An optional relation which points to a set of Subjects instead of the single Subject.
	// e.g. "members" or "owners" of a group identified in `subject`.
	optional string relation = 1;
	ObjectReference subject = 2 [(buf.validate.field).required = true];
}

message RequestPagination {
	uint32 limit = 1 [(buf.validate.field).uint32 = {gt: 0}];
	optional string continuation_token = 2;
}

message ResponsePagination {
	string continuation_token = 1;
}

message ObjectReference {
	ObjectType type = 1 [(buf.validate.field).required = true];
	string id = 2 [(buf.validate.field).string.min_len = 1];
}

message ObjectType {
	string namespace = 1 [(buf.validate.field).string.min_len = 1];
	string name = 2 [(buf.validate.field).string.min_len = 1];
}
