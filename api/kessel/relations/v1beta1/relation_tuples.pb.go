// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kessel/relations/v1beta1/relation_tuples.proto

package v1beta1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImportBulkTuplesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tuples        []*Relationship        `protobuf:"bytes,1,rep,name=tuples,proto3" json:"tuples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportBulkTuplesRequest) Reset() {
	*x = ImportBulkTuplesRequest{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportBulkTuplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBulkTuplesRequest) ProtoMessage() {}

func (x *ImportBulkTuplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportBulkTuplesRequest.ProtoReflect.Descriptor instead.
func (*ImportBulkTuplesRequest) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{0}
}

func (x *ImportBulkTuplesRequest) GetTuples() []*Relationship {
	if x != nil {
		return x.Tuples
	}
	return nil
}

type ImportBulkTuplesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumImported   uint64                 `protobuf:"varint,1,opt,name=num_imported,json=numImported,proto3" json:"num_imported,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportBulkTuplesResponse) Reset() {
	*x = ImportBulkTuplesResponse{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportBulkTuplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBulkTuplesResponse) ProtoMessage() {}

func (x *ImportBulkTuplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportBulkTuplesResponse.ProtoReflect.Descriptor instead.
func (*ImportBulkTuplesResponse) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{1}
}

func (x *ImportBulkTuplesResponse) GetNumImported() uint64 {
	if x != nil {
		return x.NumImported
	}
	return 0
}

type CreateTuplesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether or not the request should ignore existing tuples (`true`),
	// or if the request should fail if the same tuple already exists (`false`).
	// Defaults to `false`.
	Upsert        bool            `protobuf:"varint,1,opt,name=upsert,proto3" json:"upsert,omitempty"`
	Tuples        []*Relationship `protobuf:"bytes,2,rep,name=tuples,proto3" json:"tuples,omitempty"`
	FencingCheck  *FencingCheck   `protobuf:"bytes,3,opt,name=fencing_check,json=fencingCheck,proto3,oneof" json:"fencing_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTuplesRequest) Reset() {
	*x = CreateTuplesRequest{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTuplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTuplesRequest) ProtoMessage() {}

func (x *CreateTuplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTuplesRequest.ProtoReflect.Descriptor instead.
func (*CreateTuplesRequest) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTuplesRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

func (x *CreateTuplesRequest) GetTuples() []*Relationship {
	if x != nil {
		return x.Tuples
	}
	return nil
}

func (x *CreateTuplesRequest) GetFencingCheck() *FencingCheck {
	if x != nil {
		return x.FencingCheck
	}
	return nil
}

type CreateTuplesResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConsistencyToken *ConsistencyToken      `protobuf:"bytes,2,opt,name=consistency_token,json=consistencyToken,proto3" json:"consistency_token,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateTuplesResponse) Reset() {
	*x = CreateTuplesResponse{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTuplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTuplesResponse) ProtoMessage() {}

func (x *CreateTuplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTuplesResponse.ProtoReflect.Descriptor instead.
func (*CreateTuplesResponse) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTuplesResponse) GetConsistencyToken() *ConsistencyToken {
	if x != nil {
		return x.ConsistencyToken
	}
	return nil
}

type ReadTuplesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *RelationTupleFilter   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *RequestPagination     `protobuf:"bytes,2,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Consistency   *Consistency           `protobuf:"bytes,3,opt,name=consistency,proto3,oneof" json:"consistency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadTuplesRequest) Reset() {
	*x = ReadTuplesRequest{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadTuplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTuplesRequest) ProtoMessage() {}

func (x *ReadTuplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTuplesRequest.ProtoReflect.Descriptor instead.
func (*ReadTuplesRequest) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{4}
}

func (x *ReadTuplesRequest) GetFilter() *RelationTupleFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ReadTuplesRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ReadTuplesRequest) GetConsistency() *Consistency {
	if x != nil {
		return x.Consistency
	}
	return nil
}

type ReadTuplesResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Tuple            *Relationship          `protobuf:"bytes,1,opt,name=tuple,proto3" json:"tuple,omitempty"`
	Pagination       *ResponsePagination    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	ConsistencyToken *ConsistencyToken      `protobuf:"bytes,3,opt,name=consistency_token,json=consistencyToken,proto3" json:"consistency_token,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReadTuplesResponse) Reset() {
	*x = ReadTuplesResponse{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadTuplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTuplesResponse) ProtoMessage() {}

func (x *ReadTuplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTuplesResponse.ProtoReflect.Descriptor instead.
func (*ReadTuplesResponse) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{5}
}

func (x *ReadTuplesResponse) GetTuple() *Relationship {
	if x != nil {
		return x.Tuple
	}
	return nil
}

func (x *ReadTuplesResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ReadTuplesResponse) GetConsistencyToken() *ConsistencyToken {
	if x != nil {
		return x.ConsistencyToken
	}
	return nil
}

type DeleteTuplesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *RelationTupleFilter   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	FencingCheck  *FencingCheck          `protobuf:"bytes,2,opt,name=fencing_check,json=fencingCheck,proto3,oneof" json:"fencing_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTuplesRequest) Reset() {
	*x = DeleteTuplesRequest{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTuplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTuplesRequest) ProtoMessage() {}

func (x *DeleteTuplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTuplesRequest.ProtoReflect.Descriptor instead.
func (*DeleteTuplesRequest) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteTuplesRequest) GetFilter() *RelationTupleFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DeleteTuplesRequest) GetFencingCheck() *FencingCheck {
	if x != nil {
		return x.FencingCheck
	}
	return nil
}

type DeleteTuplesResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConsistencyToken *ConsistencyToken      `protobuf:"bytes,2,opt,name=consistency_token,json=consistencyToken,proto3" json:"consistency_token,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteTuplesResponse) Reset() {
	*x = DeleteTuplesResponse{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTuplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTuplesResponse) ProtoMessage() {}

func (x *DeleteTuplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTuplesResponse.ProtoReflect.Descriptor instead.
func (*DeleteTuplesResponse) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTuplesResponse) GetConsistencyToken() *ConsistencyToken {
	if x != nil {
		return x.ConsistencyToken
	}
	return nil
}

type AcquireLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LockId        string                 `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireLockRequest) Reset() {
	*x = AcquireLockRequest{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockRequest) ProtoMessage() {}

func (x *AcquireLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockRequest.ProtoReflect.Descriptor instead.
func (*AcquireLockRequest) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{8}
}

func (x *AcquireLockRequest) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

type AcquireLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LockToken     string                 `protobuf:"bytes,1,opt,name=lock_token,json=lockToken,proto3" json:"lock_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireLockResponse) Reset() {
	*x = AcquireLockResponse{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockResponse) ProtoMessage() {}

func (x *AcquireLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockResponse.ProtoReflect.Descriptor instead.
func (*AcquireLockResponse) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{9}
}

func (x *AcquireLockResponse) GetLockToken() string {
	if x != nil {
		return x.LockToken
	}
	return ""
}

type FencingCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LockId        string                 `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	LockToken     string                 `protobuf:"bytes,2,opt,name=lock_token,json=lockToken,proto3" json:"lock_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FencingCheck) Reset() {
	*x = FencingCheck{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FencingCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FencingCheck) ProtoMessage() {}

func (x *FencingCheck) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FencingCheck.ProtoReflect.Descriptor instead.
func (*FencingCheck) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{10}
}

func (x *FencingCheck) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

func (x *FencingCheck) GetLockToken() string {
	if x != nil {
		return x.LockToken
	}
	return ""
}

// RelationTupleFilter is used to filter tuples based on their resource, relation, and subject.
// All fields are optional but capabilities may vary based on the chosen store and its indexes.
// At least one field must be provided.
type RelationTupleFilter struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ResourceNamespace *string                `protobuf:"bytes,1,opt,name=resource_namespace,json=resourceNamespace,proto3,oneof" json:"resource_namespace,omitempty"`
	ResourceType      *string                `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3,oneof" json:"resource_type,omitempty"`
	ResourceId        *string                `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3,oneof" json:"resource_id,omitempty"`
	Relation          *string                `protobuf:"bytes,4,opt,name=relation,proto3,oneof" json:"relation,omitempty"`
	SubjectFilter     *SubjectFilter         `protobuf:"bytes,5,opt,name=subject_filter,json=subjectFilter,proto3,oneof" json:"subject_filter,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RelationTupleFilter) Reset() {
	*x = RelationTupleFilter{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelationTupleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationTupleFilter) ProtoMessage() {}

func (x *RelationTupleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationTupleFilter.ProtoReflect.Descriptor instead.
func (*RelationTupleFilter) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{11}
}

func (x *RelationTupleFilter) GetResourceNamespace() string {
	if x != nil && x.ResourceNamespace != nil {
		return *x.ResourceNamespace
	}
	return ""
}

func (x *RelationTupleFilter) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

func (x *RelationTupleFilter) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *RelationTupleFilter) GetRelation() string {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return ""
}

func (x *RelationTupleFilter) GetSubjectFilter() *SubjectFilter {
	if x != nil {
		return x.SubjectFilter
	}
	return nil
}

type SubjectFilter struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SubjectNamespace *string                `protobuf:"bytes,1,opt,name=subject_namespace,json=subjectNamespace,proto3,oneof" json:"subject_namespace,omitempty"`
	SubjectType      *string                `protobuf:"bytes,2,opt,name=subject_type,json=subjectType,proto3,oneof" json:"subject_type,omitempty"`
	SubjectId        *string                `protobuf:"bytes,3,opt,name=subject_id,json=subjectId,proto3,oneof" json:"subject_id,omitempty"`
	Relation         *string                `protobuf:"bytes,4,opt,name=relation,proto3,oneof" json:"relation,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubjectFilter) Reset() {
	*x = SubjectFilter{}
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubjectFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectFilter) ProtoMessage() {}

func (x *SubjectFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectFilter.ProtoReflect.Descriptor instead.
func (*SubjectFilter) Descriptor() ([]byte, []int) {
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP(), []int{12}
}

func (x *SubjectFilter) GetSubjectNamespace() string {
	if x != nil && x.SubjectNamespace != nil {
		return *x.SubjectNamespace
	}
	return ""
}

func (x *SubjectFilter) GetSubjectType() string {
	if x != nil && x.SubjectType != nil {
		return *x.SubjectType
	}
	return ""
}

func (x *SubjectFilter) GetSubjectId() string {
	if x != nil && x.SubjectId != nil {
		return *x.SubjectId
	}
	return ""
}

func (x *SubjectFilter) GetRelation() string {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return ""
}

var File_kessel_relations_v1beta1_relation_tuples_proto protoreflect.FileDescriptor

const file_kessel_relations_v1beta1_relation_tuples_proto_rawDesc = "" +
	"\n" +
	".kessel/relations/v1beta1/relation_tuples.proto\x12\x18kessel.relations.v1beta1\x1a\x1cgoogle/api/annotations.proto\x1a%kessel/relations/v1beta1/common.proto\x1a\x1bbuf/validate/validate.proto\"c\n" +
	"\x17ImportBulkTuplesRequest\x12H\n" +
	"\x06tuples\x18\x01 \x03(\v2&.kessel.relations.v1beta1.RelationshipB\b\xbaH\x05\x92\x01\x02\b\x01R\x06tuples\"=\n" +
	"\x18ImportBulkTuplesResponse\x12!\n" +
	"\fnum_imported\x18\x01 \x01(\x04R\vnumImported\"\xd1\x01\n" +
	"\x13CreateTuplesRequest\x12\x16\n" +
	"\x06upsert\x18\x01 \x01(\bR\x06upsert\x12>\n" +
	"\x06tuples\x18\x02 \x03(\v2&.kessel.relations.v1beta1.RelationshipR\x06tuples\x12P\n" +
	"\rfencing_check\x18\x03 \x01(\v2&.kessel.relations.v1beta1.FencingCheckH\x00R\ffencingCheck\x88\x01\x01B\x10\n" +
	"\x0e_fencing_check\"o\n" +
	"\x14CreateTuplesResponse\x12W\n" +
	"\x11consistency_token\x18\x02 \x01(\v2*.kessel.relations.v1beta1.ConsistencyTokenR\x10consistencyToken\"\xa1\x02\n" +
	"\x11ReadTuplesRequest\x12M\n" +
	"\x06filter\x18\x01 \x01(\v2-.kessel.relations.v1beta1.RelationTupleFilterB\x06\xbaH\x03\xc8\x01\x01R\x06filter\x12P\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2+.kessel.relations.v1beta1.RequestPaginationH\x00R\n" +
	"pagination\x88\x01\x01\x12L\n" +
	"\vconsistency\x18\x03 \x01(\v2%.kessel.relations.v1beta1.ConsistencyH\x01R\vconsistency\x88\x01\x01B\r\n" +
	"\v_paginationB\x0e\n" +
	"\f_consistency\"\xf9\x01\n" +
	"\x12ReadTuplesResponse\x12<\n" +
	"\x05tuple\x18\x01 \x01(\v2&.kessel.relations.v1beta1.RelationshipR\x05tuple\x12L\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2,.kessel.relations.v1beta1.ResponsePaginationR\n" +
	"pagination\x12W\n" +
	"\x11consistency_token\x18\x03 \x01(\v2*.kessel.relations.v1beta1.ConsistencyTokenR\x10consistencyToken\"\xc8\x01\n" +
	"\x13DeleteTuplesRequest\x12M\n" +
	"\x06filter\x18\x01 \x01(\v2-.kessel.relations.v1beta1.RelationTupleFilterB\x06\xbaH\x03\xc8\x01\x01R\x06filter\x12P\n" +
	"\rfencing_check\x18\x02 \x01(\v2&.kessel.relations.v1beta1.FencingCheckH\x00R\ffencingCheck\x88\x01\x01B\x10\n" +
	"\x0e_fencing_check\"o\n" +
	"\x14DeleteTuplesResponse\x12W\n" +
	"\x11consistency_token\x18\x02 \x01(\v2*.kessel.relations.v1beta1.ConsistencyTokenR\x10consistencyToken\"5\n" +
	"\x12AcquireLockRequest\x12\x1f\n" +
	"\alock_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x06lockId\"4\n" +
	"\x13AcquireLockResponse\x12\x1d\n" +
	"\n" +
	"lock_token\x18\x01 \x01(\tR\tlockToken\"V\n" +
	"\fFencingCheck\x12\x1f\n" +
	"\alock_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x06lockId\x12%\n" +
	"\n" +
	"lock_token\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\tlockToken\"\xe8\x02\n" +
	"\x13RelationTupleFilter\x122\n" +
	"\x12resource_namespace\x18\x01 \x01(\tH\x00R\x11resourceNamespace\x88\x01\x01\x12(\n" +
	"\rresource_type\x18\x02 \x01(\tH\x01R\fresourceType\x88\x01\x01\x12$\n" +
	"\vresource_id\x18\x03 \x01(\tH\x02R\n" +
	"resourceId\x88\x01\x01\x12\x1f\n" +
	"\brelation\x18\x04 \x01(\tH\x03R\brelation\x88\x01\x01\x12S\n" +
	"\x0esubject_filter\x18\x05 \x01(\v2'.kessel.relations.v1beta1.SubjectFilterH\x04R\rsubjectFilter\x88\x01\x01B\x15\n" +
	"\x13_resource_namespaceB\x10\n" +
	"\x0e_resource_typeB\x0e\n" +
	"\f_resource_idB\v\n" +
	"\t_relationB\x11\n" +
	"\x0f_subject_filter\"\xf1\x01\n" +
	"\rSubjectFilter\x120\n" +
	"\x11subject_namespace\x18\x01 \x01(\tH\x00R\x10subjectNamespace\x88\x01\x01\x12&\n" +
	"\fsubject_type\x18\x02 \x01(\tH\x01R\vsubjectType\x88\x01\x01\x12\"\n" +
	"\n" +
	"subject_id\x18\x03 \x01(\tH\x02R\tsubjectId\x88\x01\x01\x12\x1f\n" +
	"\brelation\x18\x04 \x01(\tH\x03R\brelation\x88\x01\x01B\x14\n" +
	"\x12_subject_namespaceB\x0f\n" +
	"\r_subject_typeB\r\n" +
	"\v_subject_idB\v\n" +
	"\t_relation2\xe1\x05\n" +
	"\x12KesselTupleService\x12\x89\x01\n" +
	"\fCreateTuples\x12-.kessel.relations.v1beta1.CreateTuplesRequest\x1a..kessel.relations.v1beta1.CreateTuplesResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1beta1/tuples\x12\x82\x01\n" +
	"\n" +
	"ReadTuples\x12+.kessel.relations.v1beta1.ReadTuplesRequest\x1a,.kessel.relations.v1beta1.ReadTuplesResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1beta1/tuples0\x01\x12\x86\x01\n" +
	"\fDeleteTuples\x12-.kessel.relations.v1beta1.DeleteTuplesRequest\x1a..kessel.relations.v1beta1.DeleteTuplesResponse\"\x17\x82\xd3\xe4\x93\x02\x11*\x0f/v1beta1/tuples\x12\xa2\x01\n" +
	"\x10ImportBulkTuples\x121.kessel.relations.v1beta1.ImportBulkTuplesRequest\x1a2.kessel.relations.v1beta1.ImportBulkTuplesResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1beta1/tuples/bulkimport(\x01\x12\x8b\x01\n" +
	"\vAcquireLock\x12,.kessel.relations.v1beta1.AcquireLockRequest\x1a-.kessel.relations.v1beta1.AcquireLockResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1beta1/acquirelockBr\n" +
	"(org.project_kessel.api.relations.v1beta1P\x01ZDgithub.com/project-kessel/relations-api/api/kessel/relations/v1beta1b\x06proto3"

var (
	file_kessel_relations_v1beta1_relation_tuples_proto_rawDescOnce sync.Once
	file_kessel_relations_v1beta1_relation_tuples_proto_rawDescData []byte
)

func file_kessel_relations_v1beta1_relation_tuples_proto_rawDescGZIP() []byte {
	file_kessel_relations_v1beta1_relation_tuples_proto_rawDescOnce.Do(func() {
		file_kessel_relations_v1beta1_relation_tuples_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kessel_relations_v1beta1_relation_tuples_proto_rawDesc), len(file_kessel_relations_v1beta1_relation_tuples_proto_rawDesc)))
	})
	return file_kessel_relations_v1beta1_relation_tuples_proto_rawDescData
}

var file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_kessel_relations_v1beta1_relation_tuples_proto_goTypes = []any{
	(*ImportBulkTuplesRequest)(nil),  // 0: kessel.relations.v1beta1.ImportBulkTuplesRequest
	(*ImportBulkTuplesResponse)(nil), // 1: kessel.relations.v1beta1.ImportBulkTuplesResponse
	(*CreateTuplesRequest)(nil),      // 2: kessel.relations.v1beta1.CreateTuplesRequest
	(*CreateTuplesResponse)(nil),     // 3: kessel.relations.v1beta1.CreateTuplesResponse
	(*ReadTuplesRequest)(nil),        // 4: kessel.relations.v1beta1.ReadTuplesRequest
	(*ReadTuplesResponse)(nil),       // 5: kessel.relations.v1beta1.ReadTuplesResponse
	(*DeleteTuplesRequest)(nil),      // 6: kessel.relations.v1beta1.DeleteTuplesRequest
	(*DeleteTuplesResponse)(nil),     // 7: kessel.relations.v1beta1.DeleteTuplesResponse
	(*AcquireLockRequest)(nil),       // 8: kessel.relations.v1beta1.AcquireLockRequest
	(*AcquireLockResponse)(nil),      // 9: kessel.relations.v1beta1.AcquireLockResponse
	(*FencingCheck)(nil),             // 10: kessel.relations.v1beta1.FencingCheck
	(*RelationTupleFilter)(nil),      // 11: kessel.relations.v1beta1.RelationTupleFilter
	(*SubjectFilter)(nil),            // 12: kessel.relations.v1beta1.SubjectFilter
	(*Relationship)(nil),             // 13: kessel.relations.v1beta1.Relationship
	(*ConsistencyToken)(nil),         // 14: kessel.relations.v1beta1.ConsistencyToken
	(*RequestPagination)(nil),        // 15: kessel.relations.v1beta1.RequestPagination
	(*Consistency)(nil),              // 16: kessel.relations.v1beta1.Consistency
	(*ResponsePagination)(nil),       // 17: kessel.relations.v1beta1.ResponsePagination
}
var file_kessel_relations_v1beta1_relation_tuples_proto_depIdxs = []int32{
	13, // 0: kessel.relations.v1beta1.ImportBulkTuplesRequest.tuples:type_name -> kessel.relations.v1beta1.Relationship
	13, // 1: kessel.relations.v1beta1.CreateTuplesRequest.tuples:type_name -> kessel.relations.v1beta1.Relationship
	10, // 2: kessel.relations.v1beta1.CreateTuplesRequest.fencing_check:type_name -> kessel.relations.v1beta1.FencingCheck
	14, // 3: kessel.relations.v1beta1.CreateTuplesResponse.consistency_token:type_name -> kessel.relations.v1beta1.ConsistencyToken
	11, // 4: kessel.relations.v1beta1.ReadTuplesRequest.filter:type_name -> kessel.relations.v1beta1.RelationTupleFilter
	15, // 5: kessel.relations.v1beta1.ReadTuplesRequest.pagination:type_name -> kessel.relations.v1beta1.RequestPagination
	16, // 6: kessel.relations.v1beta1.ReadTuplesRequest.consistency:type_name -> kessel.relations.v1beta1.Consistency
	13, // 7: kessel.relations.v1beta1.ReadTuplesResponse.tuple:type_name -> kessel.relations.v1beta1.Relationship
	17, // 8: kessel.relations.v1beta1.ReadTuplesResponse.pagination:type_name -> kessel.relations.v1beta1.ResponsePagination
	14, // 9: kessel.relations.v1beta1.ReadTuplesResponse.consistency_token:type_name -> kessel.relations.v1beta1.ConsistencyToken
	11, // 10: kessel.relations.v1beta1.DeleteTuplesRequest.filter:type_name -> kessel.relations.v1beta1.RelationTupleFilter
	10, // 11: kessel.relations.v1beta1.DeleteTuplesRequest.fencing_check:type_name -> kessel.relations.v1beta1.FencingCheck
	14, // 12: kessel.relations.v1beta1.DeleteTuplesResponse.consistency_token:type_name -> kessel.relations.v1beta1.ConsistencyToken
	12, // 13: kessel.relations.v1beta1.RelationTupleFilter.subject_filter:type_name -> kessel.relations.v1beta1.SubjectFilter
	2,  // 14: kessel.relations.v1beta1.KesselTupleService.CreateTuples:input_type -> kessel.relations.v1beta1.CreateTuplesRequest
	4,  // 15: kessel.relations.v1beta1.KesselTupleService.ReadTuples:input_type -> kessel.relations.v1beta1.ReadTuplesRequest
	6,  // 16: kessel.relations.v1beta1.KesselTupleService.DeleteTuples:input_type -> kessel.relations.v1beta1.DeleteTuplesRequest
	0,  // 17: kessel.relations.v1beta1.KesselTupleService.ImportBulkTuples:input_type -> kessel.relations.v1beta1.ImportBulkTuplesRequest
	8,  // 18: kessel.relations.v1beta1.KesselTupleService.AcquireLock:input_type -> kessel.relations.v1beta1.AcquireLockRequest
	3,  // 19: kessel.relations.v1beta1.KesselTupleService.CreateTuples:output_type -> kessel.relations.v1beta1.CreateTuplesResponse
	5,  // 20: kessel.relations.v1beta1.KesselTupleService.ReadTuples:output_type -> kessel.relations.v1beta1.ReadTuplesResponse
	7,  // 21: kessel.relations.v1beta1.KesselTupleService.DeleteTuples:output_type -> kessel.relations.v1beta1.DeleteTuplesResponse
	1,  // 22: kessel.relations.v1beta1.KesselTupleService.ImportBulkTuples:output_type -> kessel.relations.v1beta1.ImportBulkTuplesResponse
	9,  // 23: kessel.relations.v1beta1.KesselTupleService.AcquireLock:output_type -> kessel.relations.v1beta1.AcquireLockResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_kessel_relations_v1beta1_relation_tuples_proto_init() }
func file_kessel_relations_v1beta1_relation_tuples_proto_init() {
	if File_kessel_relations_v1beta1_relation_tuples_proto != nil {
		return
	}
	file_kessel_relations_v1beta1_common_proto_init()
	file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[2].OneofWrappers = []any{}
	file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[4].OneofWrappers = []any{}
	file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[6].OneofWrappers = []any{}
	file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[11].OneofWrappers = []any{}
	file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kessel_relations_v1beta1_relation_tuples_proto_rawDesc), len(file_kessel_relations_v1beta1_relation_tuples_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kessel_relations_v1beta1_relation_tuples_proto_goTypes,
		DependencyIndexes: file_kessel_relations_v1beta1_relation_tuples_proto_depIdxs,
		MessageInfos:      file_kessel_relations_v1beta1_relation_tuples_proto_msgTypes,
	}.Build()
	File_kessel_relations_v1beta1_relation_tuples_proto = out.File
	file_kessel_relations_v1beta1_relation_tuples_proto_goTypes = nil
	file_kessel_relations_v1beta1_relation_tuples_proto_depIdxs = nil
}
