apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: relations
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: relations-api-config
    data:
      config.yaml: |
        server:
          http:
            addr: "${HTTPADDR:0.0.0.0:8000}"
            timeout: 1s
            pathprefix: "/api/authz"
          grpc:
            addr: "${GRPCADDR:0.0.0.0:9000}"
            timeout: 1s
          minLogLevel: Info
          auth:
            enableAuth: "${ENABLEAUTH:false}"
            jwksUrl: "${JWKSURL:http://0.0.0.0:8180/jwks}"
        data:
          spiceDb:
            useTLS: false
            endpoint: "${ENDPOINT:0.0.0.0:50051}"
            token: "${PRESHARED}" # token takes precedence over tokenFile
            tokenFile: "${PRESHARED_FILE:.secrets/local-spicedb-secret}"
            schemaFile: "${SCHEMA_FILE:deploy/schema.zed}"
  - apiVersion: v1
    kind: Secret
    metadata:
      name: postgres-secret
    stringData:
      POSTGRESQL_DATABASE: authz
      POSTGRESQL_USER: authz
      POSTGRESQL_PASSWORD: SuperSecretPassword
  - apiVersion: v1
    kind: Secret
    metadata:
      name: dev-spicedb-config
    stringData:
      preshared_key: "averysecretpresharedkey"
      datastore_uri: postgres://authz:SuperSecretPassword@postgres:5432/authz?sslmode=disable
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: postgres
      name: postgres
    spec:
      selector:
        matchLabels:
          app: postgres
      template:
        metadata:
          labels:
            app: postgres
        spec:
          containers:
          - env:
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRESQL_DATABASE
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRESQL_USER
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRESQL_PASSWORD
            - name: PGDATA
              value: /temp/data
            image: registry.redhat.io/rhel9/postgresql-15:1-54
            imagePullPolicy: Always
            name: postgres
            ports:
            - containerPort: 5432
              protocol: TCP
            resources:
              limits:
                cpu: 60m
                memory: 256Mi
              requests:
                cpu: 30m
                memory: 128Mi
          restartPolicy: Always
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: postgres
      name: postgres
    spec:
      ports:
      - name: http
        port: 5432
        protocol: TCP
      selector:
        app: postgres
  - apiVersion: authzed.com/v1alpha1
    kind: SpiceDBCluster
    metadata:
      name: relations-spicedb
    spec:
      config:
        logLevel: debug
        replicas: ${{SPICEDB_REPLICAS}}
        datastoreEngine: postgres
      secretName: dev-spicedb-config
      patches:
      - kind: Deployment
        patch:
          spec:
            template:
              spec:
                containers:
                - name: spicedb
                  resources:
                    requests:
                      memory: "128Mi"
                      cpu: "25m"
                    limits:
                      memory: "256Mi"
                      cpu: "100m"
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: kessel-relations
    spec:
      envName: ${ENV_NAME}
      testing:
        iqePlugin: relations_api
      deployments:
        - name: api
          minReplicas: ${{RELATIONS_REPLICAS}}
          podSpec:
            image: ${RELATIONS_IMAGE}:${RELATIONS_IMAGE_TAG}
            livenessProbe:
              httpGet:
                path: /api/authz/livez
                port: 8000
            readinessProbe:
              httpGet:
                path: /api/authz/readyz
                port: 8000
            env:
              - name: SPICEDB_PRESHARED
                valueFrom:
                  secretKeyRef:
                    key: preshared_key
                    name: dev-spicedb-config
              - name: SPICEDB_ENDPOINT
                value: relations-spicedb:50051
              - name: SPICEDB_SCHEMA_FILE
                value: /etc/schema/schema.zed
            volumes:
            - name: schema
              configMap:
                name: spicedb-schema
            - name: relations-api-config
              configMap:
                name: relations-api-config
            volumeMounts:
              - name: schema
                mountPath: /etc/schema
              - name: relations-api-config
                mountPath: /config
          webServices:
            public:
              enabled: true
              apiPath: authz
parameters:
  - description: ClowdEnvironment name (ephemeral, stage, prod)
    name: ENV_NAME
    required: true
  - description: App Image
    name: RELATIONS_IMAGE
    value: quay.io/redhat-services-prod/project-kessel-tenant/kessel-relations/relations-api
  - description: Image Tag
    name: RELATIONS_IMAGE_TAG
    value: latest
  - description: Number of pods for spiceDB service
    name: SPICEDB_REPLICAS
    value: '1'
  - description: Number of pods for relations service
    name: RELATIONS_REPLICAS
    value: '1'
