# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /livez:
        get:
            tags:
                - KesselRelationsHealthService
            operationId: KesselRelationsHealthService_GetLivez
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1.GetLivezResponse'
    /readyz:
        get:
            tags:
                - KesselRelationsHealthService
            operationId: KesselRelationsHealthService_GetReadyz
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1.GetReadyzResponse'
    /v1beta1/check:
        post:
            tags:
                - KesselCheckService
            description: "Checks for the existence of a single Relationship \n (a Relation between a Resource and a Subject or Subject Set)."
            operationId: KesselCheckService_Check
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.relations.v1beta1.CheckRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.CheckResponse'
    /v1beta1/checkforupdate:
        post:
            tags:
                - KesselCheckService
            operationId: KesselCheckService_CheckForUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.relations.v1beta1.CheckForUpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.CheckForUpdateResponse'
    /v1beta1/resources:
        get:
            tags:
                - KesselLookupService
            operationId: KesselLookupService_LookupResources
            parameters:
                - name: resourceType.namespace
                  in: query
                  schema:
                    type: string
                - name: resourceType.name
                  in: query
                  schema:
                    type: string
                - name: relation
                  in: query
                  schema:
                    type: string
                - name: subject.relation
                  in: query
                  description: |-
                    An optional relation which points to a set of Subjects instead of the single Subject.
                     e.g. "members" or "owners" of a group identified in `subject`.
                  schema:
                    type: string
                - name: subject.subject.type.namespace
                  in: query
                  schema:
                    type: string
                - name: subject.subject.type.name
                  in: query
                  schema:
                    type: string
                - name: subject.subject.id
                  in: query
                  schema:
                    type: string
                - name: pagination.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pagination.continuationToken
                  in: query
                  schema:
                    type: string
                - name: consistency.minimizeLatency
                  in: query
                  description: |-
                    The service selects the fastest snapshot available.
                     *Must* be set true if used.
                  schema:
                    type: boolean
                - name: consistency.atLeastAsFresh.token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.LookupResourcesResponse'
    /v1beta1/subjects:
        get:
            tags:
                - KesselLookupService
            operationId: KesselLookupService_LookupSubjects
            parameters:
                - name: resource.type.namespace
                  in: query
                  schema:
                    type: string
                - name: resource.type.name
                  in: query
                  schema:
                    type: string
                - name: resource.id
                  in: query
                  schema:
                    type: string
                - name: relation
                  in: query
                  schema:
                    type: string
                - name: subjectType.namespace
                  in: query
                  schema:
                    type: string
                - name: subjectType.name
                  in: query
                  schema:
                    type: string
                - name: subjectRelation
                  in: query
                  schema:
                    type: string
                - name: pagination.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pagination.continuationToken
                  in: query
                  schema:
                    type: string
                - name: consistency.minimizeLatency
                  in: query
                  description: |-
                    The service selects the fastest snapshot available.
                     *Must* be set true if used.
                  schema:
                    type: boolean
                - name: consistency.atLeastAsFresh.token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.LookupSubjectsResponse'
    /v1beta1/tuples:
        get:
            tags:
                - KesselTupleService
            operationId: KesselTupleService_ReadTuples
            parameters:
                - name: filter.resourceNamespace
                  in: query
                  schema:
                    type: string
                - name: filter.resourceType
                  in: query
                  schema:
                    type: string
                - name: filter.resourceId
                  in: query
                  schema:
                    type: string
                - name: filter.relation
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.subjectNamespace
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.subjectType
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.subjectId
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.relation
                  in: query
                  schema:
                    type: string
                - name: pagination.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pagination.continuationToken
                  in: query
                  schema:
                    type: string
                - name: consistency.minimizeLatency
                  in: query
                  description: |-
                    The service selects the fastest snapshot available.
                     *Must* be set true if used.
                  schema:
                    type: boolean
                - name: consistency.atLeastAsFresh.token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.ReadTuplesResponse'
        post:
            tags:
                - KesselTupleService
            operationId: KesselTupleService_CreateTuples
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.relations.v1beta1.CreateTuplesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.CreateTuplesResponse'
        delete:
            tags:
                - KesselTupleService
            operationId: KesselTupleService_DeleteTuples
            parameters:
                - name: filter.resourceNamespace
                  in: query
                  schema:
                    type: string
                - name: filter.resourceType
                  in: query
                  schema:
                    type: string
                - name: filter.resourceId
                  in: query
                  schema:
                    type: string
                - name: filter.relation
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.subjectNamespace
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.subjectType
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.subjectId
                  in: query
                  schema:
                    type: string
                - name: filter.subjectFilter.relation
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.DeleteTuplesResponse'
    /v1beta1/tuples/bulkimport:
        post:
            tags:
                - KesselTupleService
            operationId: KesselTupleService_ImportBulkTuples
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.relations.v1beta1.ImportBulkTuplesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.relations.v1beta1.ImportBulkTuplesResponse'
components:
    schemas:
        kessel.relations.v1.GetLivezResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.relations.v1.GetReadyzResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.relations.v1beta1.CheckForUpdateRequest:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ObjectReference'
                relation:
                    type: string
                subject:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.SubjectReference'
        kessel.relations.v1beta1.CheckForUpdateResponse:
            type: object
            properties:
                allowed:
                    type: integer
                    format: enum
                consistencyToken:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
        kessel.relations.v1beta1.CheckRequest:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ObjectReference'
                relation:
                    type: string
                subject:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.SubjectReference'
                consistency:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.Consistency'
        kessel.relations.v1beta1.CheckResponse:
            type: object
            properties:
                allowed:
                    type: integer
                    format: enum
                consistencyToken:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
        kessel.relations.v1beta1.Consistency:
            type: object
            properties:
                minimizeLatency:
                    type: boolean
                    description: |-
                        The service selects the fastest snapshot available.
                         *Must* be set true if used.
                atLeastAsFresh:
                    allOf:
                        - $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
                    description: "All data used in the API call must be *at least as fresh* \n as found in the ConsistencyToken. More recent data might be used\n if available or faster."
            description: Defines how a request is handled by the service.
        kessel.relations.v1beta1.ConsistencyToken:
            type: object
            properties:
                token:
                    type: string
            description: The ConsistencyToken is used to provide consistency between write and read requests.
        kessel.relations.v1beta1.CreateTuplesRequest:
            type: object
            properties:
                upsert:
                    type: boolean
                    description: |-
                        Whether or not the request should ignore existing tuples (`true`),
                         or if the request should fail if the same tuple already exists (`false`).
                         Defaults to `false`.
                tuples:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.relations.v1beta1.Relationship'
        kessel.relations.v1beta1.CreateTuplesResponse:
            type: object
            properties:
                consistencyToken:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
        kessel.relations.v1beta1.DeleteTuplesResponse:
            type: object
            properties:
                consistencyToken:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
        kessel.relations.v1beta1.ImportBulkTuplesRequest:
            type: object
            properties:
                tuples:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.relations.v1beta1.Relationship'
        kessel.relations.v1beta1.ImportBulkTuplesResponse:
            type: object
            properties:
                numImported:
                    type: string
        kessel.relations.v1beta1.LookupResourcesResponse:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ObjectReference'
                pagination:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ResponsePagination'
                consistencyToken:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
        kessel.relations.v1beta1.LookupSubjectsResponse:
            type: object
            properties:
                subject:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.SubjectReference'
                pagination:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ResponsePagination'
                consistencyToken:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
        kessel.relations.v1beta1.ObjectReference:
            type: object
            properties:
                type:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ObjectType'
                id:
                    type: string
        kessel.relations.v1beta1.ObjectType:
            type: object
            properties:
                namespace:
                    type: string
                name:
                    type: string
        kessel.relations.v1beta1.ReadTuplesResponse:
            type: object
            properties:
                tuple:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.Relationship'
                pagination:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ResponsePagination'
                consistencyToken:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ConsistencyToken'
        kessel.relations.v1beta1.Relationship:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ObjectReference'
                relation:
                    type: string
                subject:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.SubjectReference'
            description: "A _Relationship_ is the realization of a _Relation_ (a string) \n between a _Resource_ and a _Subject_ or a _Subject Set_ (known as a Userset in Zanzibar).\n\n All Relationships are object-object relations.\n \"Resource\" and \"Subject\" are relative terms which define the direction of a Relation.\n That is, Relations are unidirectional.\n If you reverse the Subject and Resource, it is a different Relation and a different Relationship.\n Conventionally, we generally refer to the Resource first, then Subject,\n following the direction of typical graph traversal (Resource to Subject)."
        kessel.relations.v1beta1.ResponsePagination:
            type: object
            properties:
                continuationToken:
                    type: string
        kessel.relations.v1beta1.SubjectReference:
            type: object
            properties:
                relation:
                    type: string
                    description: |-
                        An optional relation which points to a set of Subjects instead of the single Subject.
                         e.g. "members" or "owners" of a group identified in `subject`.
                subject:
                    $ref: '#/components/schemas/kessel.relations.v1beta1.ObjectReference'
            description: A reference to a Subject or, if a `relation` is provided, a Subject Set.
tags:
    - name: KesselCheckService
    - name: KesselLookupService
    - name: KesselRelationsHealthService
    - name: KesselTupleService
      description: "KesselTupleServices manages the persisted _Tuples_ stored in the system..\n \n A Tuple is an explicitly stated, persistent relation \n between a Resource and a Subject or Subject Set. \n It has the same _shape_ as a Relationship but is not the same thing as a Relationship.\n \n A single Tuple may result in zero-to-many Relationships."
